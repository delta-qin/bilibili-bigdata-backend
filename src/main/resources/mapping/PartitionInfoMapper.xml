<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.deltaqin.bilibili.dao.PartitionInfoMapper">
  <resultMap id="BaseResultMap" type="com.deltaqin.bilibili.dataobject.PartitionInfo">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="like_count" jdbcType="INTEGER" property="likeCount" />
    <result column="coins_count" jdbcType="INTEGER" property="coinsCount" />
    <result column="collections_count" jdbcType="INTEGER" property="collectionsCount" />
    <result column="comment_count" jdbcType="INTEGER" property="commentCount" />
    <result column="share_count" jdbcType="INTEGER" property="shareCount" />
    <result column="barrage_count" jdbcType="INTEGER" property="barrageCount" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, like_count, coins_count, collections_count, comment_count, share_count, 
    barrage_count
  </sql>
  <select id="selectByExample" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from partition_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from partition_info
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from partition_info
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfoExample">
    delete from partition_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into partition_info (name, like_count, coins_count, 
      collections_count, comment_count, share_count, 
      barrage_count)
    values (#{name,jdbcType=VARCHAR}, #{likeCount,jdbcType=INTEGER}, #{coinsCount,jdbcType=INTEGER}, 
      #{collectionsCount,jdbcType=INTEGER}, #{commentCount,jdbcType=INTEGER}, #{shareCount,jdbcType=INTEGER}, 
      #{barrageCount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfo">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into partition_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        name,
      </if>
      <if test="likeCount != null">
        like_count,
      </if>
      <if test="coinsCount != null">
        coins_count,
      </if>
      <if test="collectionsCount != null">
        collections_count,
      </if>
      <if test="commentCount != null">
        comment_count,
      </if>
      <if test="shareCount != null">
        share_count,
      </if>
      <if test="barrageCount != null">
        barrage_count,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="coinsCount != null">
        #{coinsCount,jdbcType=INTEGER},
      </if>
      <if test="collectionsCount != null">
        #{collectionsCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null">
        #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="barrageCount != null">
        #{barrageCount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfoExample" resultType="java.lang.Long">
    select count(*) from partition_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update partition_info
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.likeCount != null">
        like_count = #{record.likeCount,jdbcType=INTEGER},
      </if>
      <if test="record.coinsCount != null">
        coins_count = #{record.coinsCount,jdbcType=INTEGER},
      </if>
      <if test="record.collectionsCount != null">
        collections_count = #{record.collectionsCount,jdbcType=INTEGER},
      </if>
      <if test="record.commentCount != null">
        comment_count = #{record.commentCount,jdbcType=INTEGER},
      </if>
      <if test="record.shareCount != null">
        share_count = #{record.shareCount,jdbcType=INTEGER},
      </if>
      <if test="record.barrageCount != null">
        barrage_count = #{record.barrageCount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update partition_info
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      like_count = #{record.likeCount,jdbcType=INTEGER},
      coins_count = #{record.coinsCount,jdbcType=INTEGER},
      collections_count = #{record.collectionsCount,jdbcType=INTEGER},
      comment_count = #{record.commentCount,jdbcType=INTEGER},
      share_count = #{record.shareCount,jdbcType=INTEGER},
      barrage_count = #{record.barrageCount,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfo">
    update partition_info
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="likeCount != null">
        like_count = #{likeCount,jdbcType=INTEGER},
      </if>
      <if test="coinsCount != null">
        coins_count = #{coinsCount,jdbcType=INTEGER},
      </if>
      <if test="collectionsCount != null">
        collections_count = #{collectionsCount,jdbcType=INTEGER},
      </if>
      <if test="commentCount != null">
        comment_count = #{commentCount,jdbcType=INTEGER},
      </if>
      <if test="shareCount != null">
        share_count = #{shareCount,jdbcType=INTEGER},
      </if>
      <if test="barrageCount != null">
        barrage_count = #{barrageCount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.deltaqin.bilibili.dataobject.PartitionInfo">
    update partition_info
    set name = #{name,jdbcType=VARCHAR},
      like_count = #{likeCount,jdbcType=INTEGER},
      coins_count = #{coinsCount,jdbcType=INTEGER},
      collections_count = #{collectionsCount,jdbcType=INTEGER},
      comment_count = #{commentCount,jdbcType=INTEGER},
      share_count = #{shareCount,jdbcType=INTEGER},
      barrage_count = #{barrageCount,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>